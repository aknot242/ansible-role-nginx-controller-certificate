---
- name: Fail if required variables are not defined
  assert:
    that: ("{{ item }} is defined") and ("{{ item }} | length > 0")
  loop:
    - controller_fqdn
    - environment_name
    - controller_auth_token
    - certificate_name
    - certificate_type

- name: Build JSON payload
  template:
    src: certificate.j2
    dest: certificate.json

- name: Form the certificate API url
  set_fact:
    certificate_url: "https://{{ controller_fqdn }}/{{ api_version }}/services/environments/{{ environment_name }}/certs/{{ certificate_name }}"

- name: Upsert certificate (create if absent, change if present)
  uri:
    url: "{{ certificate_url }}"
    method: "PUT"
    body: "{{ (lookup('file','certificate.json')) }}"
    body_format: json
    status_code:
      - 200
      - 201
    return_content: yes
    validate_certs: no
    headers:
      Cookie: "{{ controller_auth_token }}"
  register: certificate_status

- name: Show certificate status
  debug:
    msg: "{{ certificate_status }}"

- name: Pause while system initiates changes
  pause:
    seconds: 2

- name: Confirm certificate is provisioned and not errored
  uri:
    url: "{{ certificate_url }}"
    method: "GET"
    body_format: json
    status_code:
      - 200
    return_content: yes
    validate_certs: no
    headers:
      Cookie: "{{ controller_auth_token }}"
  register: certificate_status
  until: (certificate_status is defined) and
         (certificate_status.json.currentStatus.state.selfConfigState.isConfigured)
  retries: 10
  delay: 2
  failed_when: certificate_status.json.currentStatus.state.selfConfigState.isError

- name: Capture certificate reference
  set_fact:
    certificate_reference: "{{ certificate_status.json.metadata.links.rel }}"

- name: Show certificate reference
  debug:
    msg: "{{ certificate_reference }}"
